Parameters:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Default: sg-051f4e4a9e6cdb5ca

  AvailabilityZone:
    Type: String
    Default: us-east-1a
    AllowedValues:
      - us-east-1a
      - us-east-1b

  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.micro

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: vockey

  ImageId:
    Type: String
    Default: ami-0277155c3f0ab2930

Resources:
  TUDublinEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: !Ref ImageId
      SecurityGroupIds:
        - !Ref SecurityGroup
      UserData:
        Fn::Base64: |
           #!/bin/bash
           sudo su
           yum update -y
           dnf install java-17-amazon-corretto-devel -y
           wget https://archive.apache.org/dist/tomcat/tomcat-10/v10.0.23/bin/apache-tomcat-10.0.23.tar.gz
           tar -xvf apache-tomcat-10.0.23.tar.gz && mv apache-tomcat-10.0.23 /opt/tomcat
           chmod +x /opt/tomcat/bin/startup.sh && chmod +x /opt/tomcat/bin/shutdown.sh           
           mkdir /root/.aws
           sh -c 'echo -e "[default]\naws_access_key_id=ASIA2UC3D37CXSLMMSGP\naws_secret_access_key=twn1km6GYFYelnLKBcsWuaTJ/hw2o3v9GUmC6CWe\naws_session_token=FwoGZXIvYXdzEDoaDO5ssgJE7oCvSe3KGCK+AT/XwREjvLGLSMiEVAhB8MZMMzigZ3nC+sJYw3M3xlcWC296ZePsOVIX6hibR64ZHPl9+u3RgnMeDPuiez79L21EoWZCEXzy1hgmvYq2tNdAq5asVyNhoWQjfRSpT5t3MCakPvbEphNIsx0p0xUxUhIZTTbbQ2aVeYRyDeoMVl6LQpujMFC0pUXXiuSXUuJtYfJ1r0R81xRoIyU+vHEeNafBiG/8REXHarJY0i7E/YME8+sGwsLA3ebGlYPVflUoirqErwYyLRXqiHKrzLbRJO1VK0Wk+0bwyTQ/DuN6aBXUCWaI3cIFjnI17vwM0DP+aGGbrg==" >> /root/.aws/credentials'
           aws s3 cp s3://tudublinapp/MyTUDublinApp.war /opt/tomcat/webapps
           sleep 30
           sed -i 's/<Connector port="8080"/<Connector port="80"/' /opt/tomcat/conf/server.xml
           /opt/tomcat/bin/startup.sh
           # Retrieve the instance ID and set the instance name
           instance_ids=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=*Webserver" "Name=instance-state-name,Values=running" --query "Reservations[*].Instances[*].InstanceId" --output text)
           last_instance_number=$(echo "$instance_ids" | sort -rn | head -n1)
           instance_tags=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=*Webserver" "Name=instance-state-name,Values=running" --query "Reservations[*].Instances[*].Tags[?Key=='Name'].Value" --output text)
           last_instance_tag=$(echo "$instance_tags" | grep -Eo '[0-9]+' | sort -rn | head -n1)
           new_instance_tag=$((last_instance_tag + 3))
           new_name="Webserver$new_instance_tag"
           aws ec2 create-tags --resources $last_instance_number --tags Key=Name,Value=$new_name
           sh -c 'echo -e '$new_name' >> /var/www/html/index.html'
           aws elbv2 register-targets --target-group-arn arn:aws:elasticloadbalancing:us-east-1:730335535045:targetgroup/webtg/7c41236f2044e14c --targets Id=$last_instance_number
      Tags:
        - Key: Name
          Value: New_Webserver